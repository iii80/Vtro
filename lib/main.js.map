{"version":3,"file":"main.js","sources":["../main.js"],"sourcesContent":["const { app, BrowserWindow, ipcMain, Menu, Tray, shell } = require('electron')\r\nconst path = require('path')\r\nconst fs = require('fs')\r\nconst cp = require('child_process')\r\nconst http = require('http')\r\nconst process = require('process')\r\nconst ping = require('ping')\r\nconst util = require('util');\r\nconst tcpPing = require('tcp-ping')\r\nconst tcping = util.promisify(tcpPing.ping)\r\n\r\n\r\nvar win, tray, trojan, privo, privoxypid, trojanpid\r\nvar pingResult = []\r\nconst server = http.createServer()\r\nconst resourcesPath = path.resolve(process.resourcesPath)\r\n\r\n\r\nfunction createWindow() {\r\n  win = new BrowserWindow({\r\n    width: 800,\r\n    height: 600,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      devTools: true\r\n    },\r\n  })\r\n  win.loadFile('index.html')\r\n\r\n  win.on('close', (e) => {\r\n    e.preventDefault()\r\n    win.hide()\r\n  })\r\n}\r\n\r\n\r\napp.name = \"Vtro\"\r\napp.on('ready', () => {\r\n  createWindow()\r\n  //  开发者工具\r\n  const isPackaged = app.isPackaged\r\n  !isPackaged && win.webContents.openDevTools()\r\n  // tray 路径为运行时路径 ./resource\r\n  tray = new Tray(\r\n    isPackaged ? path.resolve(resourcesPath, 'tray.ico') : 'tray.ico'\r\n  )\r\n  let traylist = [\r\n    {\r\n      label: '退出',\r\n      click() {\r\n        app.exit()\r\n      }\r\n    }\r\n  ]\r\n  const contextMenu = Menu.buildFromTemplate(traylist)\r\n  tray.setToolTip('Vtro')\r\n  tray.setContextMenu(contextMenu)\r\n  tray.on('click', () => {\r\n    !win.isVisible() && win.show()\r\n  })\r\n})\r\n\r\napp.on('before-quit', () => {\r\n  allquit()\r\n})\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', function (event) {\r\n  // On macOS it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\n\r\napp.on('activate', function () {\r\n  if (BrowserWindow.getAllWindows().length === 0) createWindow()\r\n})\r\n\r\n// 添加日志\r\nfunction appendLog(err, path) {\r\n  if (path === null || path === undefined) path = './trojan/log.txt'\r\n  fs.appendFile(path, err + '\\n', 'utf-8', () => { })\r\n}\r\n// 设置pac代理\r\nserver.on('request', (req, res) => {\r\n  if (req.url === '/pac') {\r\n    res.setHeader('Content-Type', 'application/x-ns-proxy-autoconfig')\r\n    fs.readFile('./proxy/proxy.pac', (e, data) => {\r\n      if (e) res.end('error')\r\n      res.end(data)\r\n    })\r\n  }\r\n})\r\nfunction makeproxy(type, arg, list) {\r\n  cp.execFile('./sysproxy.exe', [type, arg, list], {\r\n    cwd: './proxy',\r\n    windowsHide: true\r\n  }, (err, stdout, stderr) => {\r\n    if (err) appendLog(err) && server.close()\r\n    if (stderr) appendLog(stderr)\r\n  })\r\n}\r\n// http -> socks\r\nfunction privoxy() {\r\n  privo = cp.execFile('./privoxy.exe', {\r\n    cwd: './proxy',\r\n    windowsHide: true\r\n    // shell: true,\r\n  }, (err) => {\r\n    let log = 'privoxy error!has you close privoxy?\\nplease check http://localhost:1081'\r\n    if (err) appendLog(log) && server.close()\r\n  })\r\n  privoxypid = privo.pid\r\n}\r\n// 退出\r\nfunction allquit() {\r\n  trojan && trojan.kill()\r\n  privo && privo.kill()\r\n  server.listening && server.close()\r\n}\r\n// 添加文件\r\nfunction addfile(name, chunk, cb) {\r\n  fs.readFile(name, 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    let data\r\n    if (!res) data = []\r\n    data = JSON.parse(res.toString()) || []\r\n    if (cb) cb(data)\r\n    else if (chunk) {\r\n      try {\r\n        data.unshift(chunk)\r\n      } catch{\r\n        data = []\r\n        data.unshift(chunk)\r\n      }\r\n    } else appendLog(`no chunk or callback paramater in addfile func`)\r\n    fs.writeFile(name, JSON.stringify(data), e => { e && appendLog(e) })\r\n  })\r\n}\r\n// 删除数据\r\nfunction deleteData(name, type, condition) {\r\n  fs.readFile(name, 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    if (!res) return;\r\n    let data = JSON.parse(res.toString())\r\n    data = data.filter(v => {\r\n      // return v.ip !== ip\r\n      // return v===r\r\n      return condition(v)\r\n    })\r\n    fs.writeFile(name, JSON.stringify(data), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n  })\r\n}\r\n// make ping\r\nasync function makePing(e, hosts, cb) {\r\n  if (pingResult.length !== 0) pingResult = []\r\n  const start = Date.now()\r\n  await Promise.all(hosts.map(host => {\r\n    return cb(host)\r\n  })).then(res => {\r\n    res.forEach(v => {\r\n      let time = parseInt(v.min) || -1\r\n      pingResult.push(time)\r\n    })\r\n  }).catch(e => appendLog(e))\r\n  console.log(`ping cost:${Date.now() - start}ms\\nnum:${pingResult.length}`)\r\n  e.reply('ping-result', pingResult)\r\n  addfile('./trojan/lists.json', null, data => {\r\n    for (let i in data) {\r\n      data[i]['ping'] = pingResult[i]\r\n    }\r\n  })\r\n}\r\n/** 监听事件 */\r\n// 获取当前节点\r\nipcMain.once('getnow', (e, r) => {\r\n  fs.readFile('./trojan/now.json', 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    if (!res) return e.reply('setnow', '')\r\n    let name = JSON.parse(res).name\r\n    e.reply('setnow', name ? name : '')\r\n  })\r\n})\r\n// 连接\r\nipcMain.on('link', (e, type) => {\r\n  allquit()\r\n  trojan = cp.execFile('trojan.exe', {\r\n    cwd: './trojan',\r\n    windowsHide: true\r\n  }, (err, stdout, stderr) => {\r\n    if (err) appendLog(stderr, './trojan/trojanlog.txt')\r\n    if (stderr) appendLog(stderr, './trojan/trojanlog.txt')\r\n    e.reply('closed', { err: err ? err : stderr ? stderr : null })\r\n    return console.log('link is closed')\r\n  })\r\n  trojanpid = trojan.pid\r\n  let arg = ''\r\n  if (type === 'global') {\r\n    arg = `http://127.0.0.1:1081`\r\n    let list = `localhost;127.*`\r\n    makeproxy(type, arg, list)\r\n    privoxy()\r\n  } else if (type === 'pac') {\r\n    // 默认\r\n    arg = `http://127.0.0.1:1082/pac`\r\n    !server.listening && server.listen(1082, '127.0.0.1', () => {\r\n      makeproxy(type, arg)\r\n      privoxy()\r\n    })\r\n  } else makeproxy('set', 1)\r\n  e.reply('linked')\r\n})\r\n// 关闭\r\nipcMain.on('close', (e, r) => {\r\n  allquit()\r\n})\r\n// 更改连接节点\r\nipcMain.on('change-linklist', (e, r) => {\r\n  if (!r) return;\r\n  fs.readFile('./trojan/config.json', 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    fs.writeFile('./trojan/now.json', JSON.stringify(r), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n    let data = JSON.parse(res.toString())\r\n    // password,addr,port,\r\n    data.remote_addr = r.addr\r\n    data.remote_port = r.port\r\n    data.password[0] = r.password\r\n    fs.writeFile('./trojan/config.json', JSON.stringify(data), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n  })\r\n})\r\n// 获取订阅\r\nipcMain.on('get-sub', e => {\r\n  fs.readFile('./trojan/sub.json', (err, r) => {\r\n    if (err) return appendLog(err)\r\n    let data = JSON.parse(r.toString()) || []\r\n    r && e.reply('sub', data)\r\n  })\r\n})\r\n// 更新节点\r\nipcMain.on('update', (e, r) => {\r\n  addfile('./trojan/sub.json', r.sub)\r\n  addfile('./trojan/lists.json', r.data)\r\n})\r\n// 获取节点\r\nipcMain.on('get-lists', (e, r) => {\r\n  fs.readFile('./trojan/lists.json', 'utf-8', (err, res) => {\r\n    if (err) {\r\n      let d = []\r\n      fs.writeFile('./trojan/lists.json', JSON.stringify(d), () => { })\r\n    }\r\n    if (!res) {\r\n      let log = `please check your lists.json`\r\n      appendLog(log)\r\n      return;\r\n    };\r\n    let data = JSON.parse(res.toString())\r\n    e.reply('update-lists', data)\r\n  })\r\n})\r\n// 手动添加节点\r\nipcMain.on('add-list', (e, r) => {\r\n  addfile('./trojan/lists.json', r.data)\r\n})\r\n// 删除节点\r\nipcMain.on('delete-list', (e, ip) => {\r\n  deleteData('./trojan/lists.json', 'list', v => {\r\n    return v.ip !== ip\r\n  })\r\n  e.reply('deleted')\r\n})\r\n// 删除订阅\r\nipcMain.on('remove-sub', (e, sub) => {\r\n  deleteData('./trojan/sub.json', 'sub', v => {\r\n    return v !== sub\r\n  })\r\n  e.reply('removed')\r\n})\r\n// ping\r\n\r\nipcMain.on('tcping', (e, hosts) => {\r\n  makePing(e, hosts, host => {\r\n    return tcping({\r\n      address: host.ip || host.addr,\r\n      port: host.port || 443,\r\n      attempts:3\r\n    })\r\n  })\r\n})\r\n\r\nipcMain.on('all-ping', async (e, hosts) => {\r\n  makePing(e,hosts,host=>{\r\n    return ping.promise.probe(host.addr, {\r\n      timeout: 10\r\n    })\r\n  })\r\n  // async function PromiseAll(limit, array, cb) {\r\n  //   if (array.length == 0 || limit <= 0) return;\r\n  //   const list = [].concat(array)\r\n  //   let tem, index, count = limit\r\n  //   // max limit\r\n  //   let Promises = list.splice(0, limit).map((v, i) => {\r\n  //     // cb should be  a promise\r\n  //     return Promise.resolve(cb(v, i, i))\r\n  //   })\r\n\r\n  //   while (list.length > 0) {\r\n  //     index = await Promise.race(Promises)\r\n  //     tem = list.shift()\r\n  //     count++\r\n  //     Promises[index] = cb(tem, index, count)\r\n  //   }\r\n  //   await Promise.all(Promises)\r\n  // }\r\n\r\n  // idx 数组下标 index count计数 \r\n  // await PromiseAll(45, hosts, (host, index, count) => {\r\n  //   return ping.promise.probe(host.addr||host.ip, {\r\n  //     timeout: 5\r\n  //   }).then(res => {\r\n  //     if (res.avg === 'unknown') res.avg = -1\r\n  //     pingResult[count] = parseInt(res.avg)||-1\r\n  //     return index\r\n  //   })\r\n  // })\r\n})\r\n\r\n\r\n// 菜单\r\nvar template = [\r\n  {\r\n    id: 'list',\r\n    label: '设置节点',\r\n    submenu: [\r\n      { id: 'sub', label: '订阅' },\r\n      { id: 'add', label: '添加节点' },\r\n      { id: 'lists', label: '节点列表' },\r\n      { id: 'ping', label: 'ping' },\r\n      { id: 'tcp-ping', label: 'tcp-ping' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'set',\r\n    label: '设置'\r\n  },\r\n  {\r\n    id: 'log',\r\n    label: '日志',\r\n    submenu: [\r\n      {\r\n        id: 'trojanlog', label: 'trojan日志',\r\n        click: () => {\r\n          try {\r\n            shell.openItem(path.resolve('trojan/trojanlog.txt'))\r\n          } catch (e) {\r\n          }\r\n        }\r\n      },\r\n      {\r\n        id: 'linklog', label: '连接日志', click() {\r\n          try {\r\n            shell.openItem(path.resolve('trojan/log.txt'))\r\n          } catch (e) {\r\n          }\r\n        }\r\n      },\r\n    ]\r\n  },\r\n  /**\r\n   *  {\r\n    type: 'checkbox',\r\n    label: '开机启动',\r\n    checked: app.getLoginItemSettings().openAtLogin,\r\n    click(){\r\n      if (!app.isPackaged) {\r\n        app.setLoginItemSettings({\r\n          openAtLogin: !app.getLoginItemSettings().openAtLogin,\r\n          path: process.execPath\r\n        })\r\n      } else {\r\n        app.setLoginItemSettings({\r\n          openAtLogin: !app.getLoginItemSettings().openAtLogin\r\n        })\r\n      }\r\n    }\r\n  },\r\n   */\r\n]\r\nif (!app.isPackaged) {\r\n  template.push({\r\n    id: 'refresh',\r\n    label: 'refresh',\r\n    role: 'forceReload'\r\n  })\r\n}\r\nconst menu = Menu.buildFromTemplate(template)\r\nMenu.setApplicationMenu(menu)\r\n\r\nfunction send(channel, args) {\r\n  return win.webContents.send(channel, args)\r\n}\r\n\r\nmenu.items.forEach(value => {\r\n  let child = value.submenu\r\n  if (value.id === 'log') return;\r\n  if (value.id === 'refresh') return;\r\n  if (child) {\r\n    child.items.forEach(val => {\r\n      val.click = () => {\r\n        send(val.id)\r\n      }\r\n    })\r\n  } else {\r\n    value.click = () => {\r\n      send(value.id)\r\n    }\r\n  }\r\n})"],"names":["app","BrowserWindow","ipcMain","Menu","Tray","shell","require","path","fs","cp","http","process","ping","util","tcpPing","tcping","promisify","win","tray","trojan","privo","pingResult","server","createServer","resourcesPath","resolve","createWindow","width","height","webPreferences","nodeIntegration","devTools","loadFile","on","e","preventDefault","hide","appendLog","err","appendFile","makeproxy","type","arg","list","execFile","cwd","windowsHide","stdout","stderr","close","privoxy","pid","allquit","kill","listening","addfile","name","chunk","cb","readFile","res","data","JSON","parse","toString","unshift","writeFile","stringify","deleteData","condition","filter","v","async","makePing","hosts","length","start","Date","now","Promise","all","map","host","then","forEach","time","parseInt","min","push","catch","console","log","reply","i","isPackaged","webContents","openDevTools","traylist","label","[object Object]","exit","contextMenu","buildFromTemplate","setToolTip","setContextMenu","isVisible","show","event","platform","quit","getAllWindows","req","url","setHeader","end","once","r","listen","remote_addr","addr","remote_port","port","password","sub","d","ip","address","attempts","promise","probe","timeout","template","id","submenu","click","openItem","role","menu","send","channel","args","setApplicationMenu","items","value","child","val"],"mappings":"aAAA,MAAMA,IAAEA,EAAGC,cAAEA,EAAaC,QAAEA,EAAOC,KAAEA,EAAIC,KAAEA,EAAIC,MAAEA,GAAUC,QAAQ,YAC7DC,EAAOD,QAAQ,QACfE,EAAKF,QAAQ,MACbG,EAAKH,QAAQ,iBACbI,EAAOJ,QAAQ,QACfK,EAAUL,QAAQ,WAClBM,EAAON,QAAQ,QACfO,EAAOP,QAAQ,QACfQ,EAAUR,QAAQ,YAClBS,EAASF,EAAKG,UAAUF,EAAQF,MAGtC,IAAIK,EAAKC,EAAMC,EAAQC,EACnBC,EAAa,GACjB,MAAMC,EAASZ,EAAKa,eACdC,EAAgBjB,EAAKkB,QAAQd,EAAQa,eAG3C,SAASE,KACPT,EAAM,IAAIhB,EAAc,CACtB0B,MAAO,IACPC,OAAQ,IACRC,eAAgB,CACdC,iBAAiB,EACjBC,UAAU,MAGVC,SAAS,cAEbf,EAAIgB,GAAG,QAAUC,IACfA,EAAEC,iBACFlB,EAAImB,SA+CR,SAASC,EAAUC,EAAK/B,GAClBA,MAAAA,IAAqCA,EAAO,oBAChDC,EAAG+B,WAAWhC,EAAM+B,EAAM,KAAM,QAAS,QAY3C,SAASE,EAAUC,EAAMC,EAAKC,GAC5BlC,EAAGmC,SAAS,iBAAkB,CAACH,EAAMC,EAAKC,GAAO,CAC/CE,IAAK,UACLC,aAAa,GACZ,CAACR,EAAKS,EAAQC,KACXV,GAAKD,EAAUC,IAAQhB,EAAO2B,QAC9BD,GAAQX,EAAUW,KAI1B,SAASE,IACP9B,EAAQX,EAAGmC,SAAS,gBAAiB,CACnCC,IAAK,UACLC,aAAa,GAEXR,IAEEA,GAAKD,EADC,6EACiBf,EAAO2B,UAEvB7B,EAAM+B,IAGrB,SAASC,IACPjC,GAAUA,EAAOkC,OACjBjC,GAASA,EAAMiC,OACf/B,EAAOgC,WAAahC,EAAO2B,QAG7B,SAASM,EAAQC,EAAMC,EAAOC,GAC5BlD,EAAGmD,SAASH,EAAM,QAAS,CAAClB,EAAKsB,KAE/B,IAAIC,EAGJ,GAJIvB,GAAKD,EAAUC,GAEdsB,IAAKC,EAAO,IACjBA,EAAOC,KAAKC,MAAMH,EAAII,aAAe,GACjCN,EAAIA,EAAGG,QACN,GAAIJ,EACP,IACEI,EAAKI,QAAQR,GACb,MACAI,EAAO,GACPA,EAAKI,QAAQR,QAEVpB,EAAU,kDACjB7B,EAAG0D,UAAUV,EAAMM,KAAKK,UAAUN,GAAO3B,IAAOA,GAAKG,EAAUH,OAInE,SAASkC,EAAWZ,EAAMf,EAAM4B,GAC9B7D,EAAGmD,SAASH,EAAM,QAAS,CAAClB,EAAKsB,KAE/B,GADItB,GAAKD,EAAUC,IACdsB,EAAK,OACV,IAAIC,EAAOC,KAAKC,MAAMH,EAAII,YAC1BH,EAAOA,EAAKS,OAAOC,GAGVF,EAAUE,IAEnB/D,EAAG0D,UAAUV,EAAMM,KAAKK,UAAUN,GAAO,QAASvB,IAC5CA,GAAKD,EAAUC,OAKzBkC,eAAeC,EAASvC,EAAGwC,EAAOhB,GACN,IAAtBrC,EAAWsD,SAActD,EAAa,IAC1C,MAAMuD,EAAQC,KAAKC,YACbC,QAAQC,IAAIN,EAAMO,IAAIC,GACnBxB,EAAGwB,KACRC,KAAKvB,IACPA,EAAIwB,QAAQb,IACV,IAAIc,EAAOC,SAASf,EAAEgB,OAAS,EAC/BlE,EAAWmE,KAAKH,OAEjBI,MAAMvD,GAAKG,EAAUH,IACxBwD,QAAQC,IAAI,aAAad,KAAKC,MAAQF,YAAgBvD,EAAWsD,UACjEzC,EAAE0D,MAAM,cAAevE,GACvBkC,EAAQ,sBAAuB,KAAMM,IACnC,IAAK,IAAIgC,KAAKhC,EACZA,EAAKgC,GAAS,KAAIxE,EAAWwE,KAtInC7F,EAAIwD,KAAO,OACXxD,EAAIiC,GAAG,QAAS,KACdP,IAEA,MAAMoE,EAAa9F,EAAI8F,YACtBA,GAAc7E,EAAI8E,YAAYC,eAE/B9E,EAAO,IAAId,EACT0F,EAAavF,EAAKkB,QAAQD,EAAe,YAAc,YAEzD,IAAIyE,EAAW,CACb,CACEC,MAAO,KACPC,QACEnG,EAAIoG,UAIV,MAAMC,EAAclG,EAAKmG,kBAAkBL,GAC3C/E,EAAKqF,WAAW,QAChBrF,EAAKsF,eAAeH,GACpBnF,EAAKe,GAAG,QAAS,MACdhB,EAAIwF,aAAexF,EAAIyF,WAI5B1G,EAAIiC,GAAG,cAAe,KACpBmB,MAGFpD,EAAIiC,GAAG,qBAAqB,SAAU0E,GAGX,WAArBhG,EAAQiG,UAAuB5G,EAAI6G,UAIzC7G,EAAIiC,GAAG,YAAY,WAC4B,IAAzChC,EAAc6G,gBAAgBnC,QAAcjD,OASlDJ,EAAOW,GAAG,UAAW,CAAC8E,EAAKnD,KACT,SAAZmD,EAAIC,MACNpD,EAAIqD,UAAU,eAAgB,qCAC9BzG,EAAGmD,SAAS,oBAAqB,CAACzB,EAAG2B,KAC/B3B,GAAG0B,EAAIsD,IAAI,SACftD,EAAIsD,IAAIrD,QAwFd3D,EAAQiH,KAAK,SAAU,CAACjF,EAAGkF,KACzB5G,EAAGmD,SAAS,oBAAqB,QAAS,CAACrB,EAAKsB,KAE9C,GADItB,GAAKD,EAAUC,IACdsB,EAAK,OAAO1B,EAAE0D,MAAM,SAAU,IACnC,IAAIpC,EAAOM,KAAKC,MAAMH,GAAKJ,KAC3BtB,EAAE0D,MAAM,SAAUpC,GAAc,QAIpCtD,EAAQ+B,GAAG,OAAQ,CAACC,EAAGO,KACrBW,IACAjC,EAASV,EAAGmC,SAAS,aAAc,CACjCC,IAAK,WACLC,aAAa,GACZ,CAACR,EAAKS,EAAQC,KACXV,GAAKD,EAAUW,EAAQ,0BACvBA,GAAQX,EAAUW,EAAQ,0BAC9Bd,EAAE0D,MAAM,SAAU,CAAEtD,IAAKA,IAAYU,GAAkB,QAChD0C,QAAQC,IAAI,oBAETxE,EAAOgC,IACnB,IAAIT,EAAM,GACV,GAAa,WAATD,EAAmB,CACrBC,EAAM,wBAENF,EAAUC,EAAMC,EADL,mBAEXQ,QACkB,QAATT,GAETC,EAAM,6BACLpB,EAAOgC,WAAahC,EAAO+F,OAAO,KAAM,YAAa,KACpD7E,EAAUC,EAAMC,GAChBQ,OAEGV,EAAU,MAAO,GACxBN,EAAE0D,MAAM,YAGV1F,EAAQ+B,GAAG,QAAS,CAACC,EAAGkF,KACtBhE,MAGFlD,EAAQ+B,GAAG,kBAAmB,CAACC,EAAGkF,KAC3BA,GACL5G,EAAGmD,SAAS,uBAAwB,QAAS,CAACrB,EAAKsB,KAC7CtB,GAAKD,EAAUC,GACnB9B,EAAG0D,UAAU,oBAAqBJ,KAAKK,UAAUiD,GAAI,QAAS9E,IACxDA,GAAKD,EAAUC,KAErB,IAAIuB,EAAOC,KAAKC,MAAMH,EAAII,YAE1BH,EAAKyD,YAAcF,EAAEG,KACrB1D,EAAK2D,YAAcJ,EAAEK,KACrB5D,EAAK6D,SAAS,GAAKN,EAAEM,SACrBlH,EAAG0D,UAAU,uBAAwBJ,KAAKK,UAAUN,GAAO,QAASvB,IAC9DA,GAAKD,EAAUC,SAKzBpC,EAAQ+B,GAAG,UAAWC,IACpB1B,EAAGmD,SAAS,oBAAqB,CAACrB,EAAK8E,KACrC,GAAI9E,EAAK,OAAOD,EAAUC,GAC1B,IAAIuB,EAAOC,KAAKC,MAAMqD,EAAEpD,aAAe,GACvCoD,GAAKlF,EAAE0D,MAAM,MAAO/B,OAIxB3D,EAAQ+B,GAAG,SAAU,CAACC,EAAGkF,KACvB7D,EAAQ,oBAAqB6D,EAAEO,KAC/BpE,EAAQ,sBAAuB6D,EAAEvD,QAGnC3D,EAAQ+B,GAAG,YAAa,CAACC,EAAGkF,KAC1B5G,EAAGmD,SAAS,sBAAuB,QAAS,CAACrB,EAAKsB,KAChD,GAAItB,EAAK,CACP,IAAIsF,EAAI,GACRpH,EAAG0D,UAAU,sBAAuBJ,KAAKK,UAAUyD,GAAI,QAEzD,IAAKhE,EAAK,CAGR,YADAvB,EADU,gCAIZ,IAAIwB,EAAOC,KAAKC,MAAMH,EAAII,YAC1B9B,EAAE0D,MAAM,eAAgB/B,OAI5B3D,EAAQ+B,GAAG,WAAY,CAACC,EAAGkF,KACzB7D,EAAQ,sBAAuB6D,EAAEvD,QAGnC3D,EAAQ+B,GAAG,cAAe,CAACC,EAAG2F,KAC5BzD,EAAW,sBAAuB,EAAQG,GACjCA,EAAEsD,KAAOA,GAElB3F,EAAE0D,MAAM,aAGV1F,EAAQ+B,GAAG,aAAc,CAACC,EAAGyF,KAC3BvD,EAAW,oBAAqB,EAAOG,GAC9BA,IAAMoD,GAEfzF,EAAE0D,MAAM,aAIV1F,EAAQ+B,GAAG,SAAU,CAACC,EAAGwC,KACvBD,EAASvC,EAAGwC,EAAOQ,GACVnE,EAAO,CACZ+G,QAAS5C,EAAK2C,IAAM3C,EAAKqC,KACzBE,KAAMvC,EAAKuC,MAAQ,IACnBM,SAAS,OAKf7H,EAAQ+B,GAAG,WAAYuC,MAAOtC,EAAGwC,KAC/BD,EAASvC,EAAEwC,EAAMQ,GACRtE,EAAKoH,QAAQC,MAAM/C,EAAKqC,KAAM,CACnCW,QAAS,QAoCf,IAAIC,EAAW,CACb,CACEC,GAAI,OACJlC,MAAO,OACPmC,QAAS,CACP,CAAED,GAAI,MAAOlC,MAAO,MACpB,CAAEkC,GAAI,MAAOlC,MAAO,QACpB,CAAEkC,GAAI,QAASlC,MAAO,QACtB,CAAEkC,GAAI,OAAQlC,MAAO,QACrB,CAAEkC,GAAI,WAAYlC,MAAO,cAG7B,CACEkC,GAAI,MACJlC,MAAO,MAET,CACEkC,GAAI,MACJlC,MAAO,KACPmC,QAAS,CACP,CACED,GAAI,YAAalC,MAAO,WACxBoC,MAAO,KACL,IACEjI,EAAMkI,SAAShI,EAAKkB,QAAQ,yBAC5B,MAAOS,OAIb,CACEkG,GAAI,UAAWlC,MAAO,OAAQC,QAC5B,IACE9F,EAAMkI,SAAShI,EAAKkB,QAAQ,mBAC5B,MAAOS,UA0BdlC,EAAI8F,YACPqC,EAAS3C,KAAK,CACZ4C,GAAI,UACJlC,MAAO,UACPsC,KAAM,gBAGV,MAAMC,EAAOtI,EAAKmG,kBAAkB6B,GAGpC,SAASO,EAAKC,EAASC,GACrB,OAAO3H,EAAI8E,YAAY2C,KAAKC,EAASC,GAHvCzI,EAAK0I,mBAAmBJ,GAMxBA,EAAKK,MAAM1D,QAAQ2D,IACjB,IAAIC,EAAQD,EAAMV,QACD,QAAbU,EAAMX,IACO,YAAbW,EAAMX,KACNY,EACFA,EAAMF,MAAM1D,QAAQ6D,IAClBA,EAAIX,MAAQ,KACVI,EAAKO,EAAIb,OAIbW,EAAMT,MAAQ,KACZI,EAAKK,EAAMX"}