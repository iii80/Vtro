{"version":3,"file":"main.js","sources":["../main.js"],"sourcesContent":["const { app, BrowserWindow, ipcMain, Menu, Tray, shell } = require('electron')\r\nconst path = require('path')\r\nconst fs = require('fs')\r\nconst cp = require('child_process')\r\nconst http = require('http')\r\nconst process = require('process')\r\nvar ping = require('ping')\r\n\r\n\r\nvar win, tray, trojan, privo, privoxypid, trojanpid\r\nconst server = http.createServer()\r\nconst resourcesPath = path.resolve(process.resourcesPath)\r\n\r\n\r\nfunction createWindow() {\r\n  // Create the browser window.\r\n  win = new BrowserWindow({\r\n    width: 800,\r\n    height: 600,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      devTools: true\r\n    },\r\n  })\r\n  win.loadFile('index.html')\r\n\r\n  win.on('close', (e) => {\r\n    e.preventDefault()\r\n    win.hide()\r\n  })\r\n}\r\n\r\n\r\napp.name = \"Vtro\"\r\napp.on('ready', () => {\r\n  createWindow()\r\n  //  开发者工具\r\n  const isPackaged = app.isPackaged\r\n  !isPackaged && win.webContents.openDevTools()\r\n  // tray 路径为运行时路径 ./resource\r\n  tray = new Tray(\r\n    isPackaged ? path.resolve(resourcesPath, 'tray.ico') : 'tray.ico'\r\n  )\r\n  let traylist = [\r\n    {\r\n      label: '退出',\r\n      click() {\r\n        app.exit()\r\n      }\r\n    }\r\n  ]\r\n  const contextMenu = Menu.buildFromTemplate(traylist)\r\n  tray.setToolTip('Vtro')\r\n  tray.setContextMenu(contextMenu)\r\n  tray.on('click', () => {\r\n    !win.isVisible() && win.show()\r\n  })\r\n})\r\n\r\napp.on('before-quit', () => {\r\n  allquit()\r\n})\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', function (event) {\r\n  // On macOS it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\n\r\napp.on('activate', function () {\r\n  if (BrowserWindow.getAllWindows().length === 0) createWindow()\r\n})\r\n\r\n// 添加日志\r\nfunction appendLog(err, path) {\r\n  if (path === null || path === undefined) path = './trojan/log.txt'\r\n  fs.appendFile(path, err + '\\n', 'utf-8', () => { })\r\n}\r\n// 设置pac代理\r\nserver.on('request', (req, res) => {\r\n  if (req.url === '/pac') {\r\n    res.setHeader('Content-Type', 'application/x-ns-proxy-autoconfig')\r\n    fs.readFile('./proxy/proxy.pac', (e, data) => {\r\n      if (e) res.end('error')\r\n      res.end(data)\r\n    })\r\n  }\r\n})\r\nfunction makeproxy(type, arg, list) {\r\n  cp.execFile('./sysproxy.exe', [type, arg, list], {\r\n    cwd: './proxy',\r\n    windowsHide: true\r\n  }, (err, stdout, stderr) => {\r\n    if (err) appendLog(err) && server.close()\r\n    if (stderr) appendLog(stderr)\r\n  })\r\n}\r\n// http -> socks\r\nfunction privoxy() {\r\n  privo = cp.execFile('./privoxy.exe', {\r\n    cwd: './proxy',\r\n    windowsHide: true\r\n    // shell: true,\r\n  }, (err) => {\r\n    let log = 'privoxy error!has you close privoxy?\\nplease check http://localhost:1081'\r\n    if (err) appendLog(log) && server.close()\r\n  })\r\n  privoxypid = privo.pid\r\n}\r\n// 退出\r\nfunction allquit() {\r\n  trojan && trojan.kill()\r\n  privo && privo.kill()\r\n  server.listening && server.close()\r\n}\r\n// 添加文件\r\nfunction addfile(name, chunk, cb) {\r\n  fs.readFile(name, 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    let data\r\n    if (!res) data = []\r\n    data = JSON.parse(res.toString()) || []\r\n    if (cb) cb(data)\r\n    else if (chunk) {\r\n      try {\r\n        data.unshift(chunk)\r\n      } catch{\r\n        data = []\r\n        data.unshift(chunk)\r\n      }\r\n    } else appendLog(`no chunk or callback paramater in addfile func`)\r\n    fs.writeFile(name, JSON.stringify(data), e => { e && appendLog(e) })\r\n  })\r\n}\r\n// 删除数据\r\nfunction deleteData(name, type, condition) {\r\n  fs.readFile(name, 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    if (!res) return;\r\n    let data = JSON.parse(res.toString())\r\n    data = data.filter(v => {\r\n      // return v.ip !== ip\r\n      // return v===r\r\n      return condition(v)\r\n    })\r\n    fs.writeFile(name, JSON.stringify(data), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n  })\r\n}\r\n/** 监听事件 */\r\n// 获取当前节点\r\nipcMain.once('getnow', (e, r) => {\r\n  fs.readFile('./trojan/now.json', 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    if (!res) return e.reply('setnow', '')\r\n    let name = JSON.parse(res).name\r\n    e.reply('setnow', name ? name : '')\r\n  })\r\n})\r\n// 连接\r\nipcMain.on('link', (e, type) => {\r\n  allquit()\r\n  trojan = cp.execFile('trojan.exe', {\r\n    cwd: './trojan',\r\n    windowsHide: true\r\n  }, (err, stdout, stderr) => {\r\n    if (err) appendLog(stderr, './trojan/trojanlog.txt')\r\n    if (stderr) appendLog(stderr, './trojan/trojanlog.txt')\r\n    e.reply('closed', { err: err ? err : stderr ? stderr : null })\r\n    return console.log('link is closed')\r\n  })\r\n  trojanpid = trojan.pid\r\n  let arg = ''\r\n  if (type === 'global') {\r\n    arg = `http://127.0.0.1:1081`\r\n    let list = `localhost;127.*`\r\n    makeproxy(type, arg, list)\r\n    privoxy()\r\n  } else if (type === 'pac') {\r\n    // 默认\r\n    arg = `http://127.0.0.1:1082/pac`\r\n    !server.listening && server.listen(1082, '127.0.0.1', () => {\r\n      makeproxy(type, arg)\r\n      privoxy()\r\n    })\r\n  } else makeproxy('set', 1)\r\n  e.reply('linked')\r\n})\r\n// 关闭\r\nipcMain.on('close', (e, r) => {\r\n  allquit()\r\n})\r\n// 更改连接节点\r\nipcMain.on('change-linklist', (e, r) => {\r\n  if (!r) return;\r\n  fs.readFile('./trojan/config.json', 'utf-8', (err, res) => {\r\n    if (err) appendLog(err)\r\n    fs.writeFile('./trojan/now.json', JSON.stringify(r), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n    let data = JSON.parse(res.toString())\r\n    // password,addr,port,\r\n    data.remote_addr = r.addr\r\n    data.remote_port = r.port\r\n    data.password[0] = r.password\r\n    fs.writeFile('./trojan/config.json', JSON.stringify(data), 'utf-8', err => {\r\n      if (err) appendLog(err)\r\n    })\r\n  })\r\n})\r\n// 获取订阅\r\nipcMain.on('get-sub', e => {\r\n  fs.readFile('./trojan/sub.json', (err, r) => {\r\n    if (err) return appendLog(err)\r\n    let data = JSON.parse(r.toString()) || []\r\n    r && e.reply('sub', data)\r\n  })\r\n})\r\n// 更新节点\r\nipcMain.on('update', (e, r) => {\r\n  addfile('./trojan/sub.json', r.sub)\r\n  addfile('./trojan/lists.json', r.data)\r\n})\r\n// 获取节点\r\nipcMain.on('get-lists', (e, r) => {\r\n  fs.readFile('./trojan/lists.json', 'utf-8', (err, res) => {\r\n    if (err) {\r\n      let d = []\r\n      fs.writeFile('./trojan/lists.json', JSON.stringify(d), () => { })\r\n    }\r\n    if (!res) {\r\n      let log = `please check your lists.json`\r\n      appendLog(log)\r\n      return;\r\n    };\r\n    let data = JSON.parse(res.toString())\r\n    e.reply('update-lists', data)\r\n  })\r\n})\r\n// 手动添加节点\r\nipcMain.on('add-list', (e, r) => {\r\n  addfile('./trojan/lists.json', r.data)\r\n})\r\n// 删除节点\r\nipcMain.on('delete-list', (e, ip) => {\r\n  deleteData('./trojan/lists.json', 'list', v => {\r\n    return v.ip !== ip\r\n  })\r\n  e.reply('deleted')\r\n})\r\n// 删除订阅\r\nipcMain.on('remove-sub', (e, sub) => {\r\n  deleteData('./trojan/sub.json', 'sub', v => {\r\n    return v !== sub\r\n  })\r\n  e.reply('removed')\r\n})\r\n// ping\r\nipcMain.on('all-ping', async (e, hosts) => {\r\n  let arr = []\r\n\r\n  // async function PromiseAll(limit, array, cb) {\r\n  //   if (array.length == 0 || limit <= 0) return;\r\n  //   const list = [].concat(array)\r\n  //   let tem, index, count = limit\r\n  //   // max limit\r\n  //   let Promises = list.splice(0, limit).map((v, i) => {\r\n  //     // cb should be  a promise\r\n  //     return Promise.resolve(cb(v, i, i))\r\n  //   })\r\n\r\n  //   while (list.length > 0) {\r\n  //     index = await Promise.race(Promises)\r\n  //     tem = list.shift()\r\n  //     count++\r\n  //     Promises[index] = cb(tem, index, count)\r\n  //   }\r\n  //   await Promise.all(Promises)\r\n  // }\r\n\r\n  const start = Date.now()\r\n  await Promise.all(hosts.map(host => {\r\n    return ping.promise.probe(host.addr, {\r\n      timeout: 10\r\n    })\r\n  })).then(res => {\r\n    res.forEach((v, i) => {\r\n      if (v.avg === 'unknown') v.avg = -1\r\n      arr[i] = parseInt(v.avg)\r\n    })\r\n  }).catch(e => {\r\n    appendLog(e)\r\n  })\r\n\r\n  // idx 数组下标 index count计数 \r\n  // await PromiseAll(45, hosts, (host, index, count) => {\r\n  //   return ping.promise.probe(host.addr||host.ip, {\r\n  //     timeout: 5\r\n  //   }).then(res => {\r\n  //     if (res.avg === 'unknown') res.avg = -1\r\n  //     arr[count] = parseInt(res.avg)||-1\r\n  //     return index\r\n  //   })\r\n  // })\r\n  console.log(arr)\r\n  console.log(`ping cost:${Date.now() - start}ms\\nnum:${arr.length}`)\r\n\r\n  e.reply('ping-result', arr)\r\n  addfile('./trojan/lists.json', null, data => {\r\n    for (let i in data) {\r\n      data[i]['ping'] = arr[i]\r\n    }\r\n  })\r\n})\r\n\r\n\r\n// 菜单\r\nvar template = [\r\n  {\r\n    id: 'list',\r\n    label: '设置节点',\r\n    submenu: [\r\n      { id: 'sub', label: '订阅' },\r\n      { id: 'add', label: '添加节点' },\r\n      { id: 'lists', label: '节点列表' },\r\n      { id: 'ping', label: 'ping' }\r\n    ]\r\n  },\r\n  {\r\n    id: 'set',\r\n    label: '设置'\r\n  },\r\n  {\r\n    id: 'log',\r\n    label: '日志',\r\n    submenu: [\r\n      {\r\n        id: 'trojanlog', label: 'trojan日志',\r\n        click: () => {\r\n          try {\r\n            shell.openItem(path.resolve('trojan/trojanlog.txt'))\r\n          } catch (e) {\r\n          }\r\n        }\r\n      },\r\n      {\r\n        id: 'linklog', label: '连接日志', click() {\r\n          try {\r\n            shell.openItem(path.resolve('trojan/log.txt'))\r\n          } catch (e) {\r\n          }\r\n        }\r\n      },\r\n    ]\r\n  },\r\n  /**\r\n   *  {\r\n    type: 'checkbox',\r\n    label: '开机启动',\r\n    checked: app.getLoginItemSettings().openAtLogin,\r\n    click(){\r\n      if (!app.isPackaged) {\r\n        app.setLoginItemSettings({\r\n          openAtLogin: !app.getLoginItemSettings().openAtLogin,\r\n          path: process.execPath\r\n        })\r\n      } else {\r\n        app.setLoginItemSettings({\r\n          openAtLogin: !app.getLoginItemSettings().openAtLogin\r\n        })\r\n      }\r\n    }\r\n  },\r\n   */\r\n]\r\nif (!app.isPackaged) {\r\n  template.push({\r\n    id: 'refresh',\r\n    label: 'refresh',\r\n    role: 'forceReload'\r\n  })\r\n}\r\nconst menu = Menu.buildFromTemplate(template)\r\nMenu.setApplicationMenu(menu)\r\n\r\nfunction send(channel, args) {\r\n  return win.webContents.send(channel, args)\r\n}\r\n\r\nmenu.items.forEach(value => {\r\n  let child = value.submenu\r\n  if (value.id === 'log') return;\r\n  if (value.id === 'refresh') return;\r\n  if (child) {\r\n    child.items.forEach(val => {\r\n      val.click = () => {\r\n        send(val.id)\r\n      }\r\n    })\r\n  } else {\r\n    value.click = () => {\r\n      send(value.id)\r\n    }\r\n  }\r\n})"],"names":["app","BrowserWindow","ipcMain","Menu","Tray","shell","require","path","fs","cp","http","process","win","tray","trojan","privo","ping","server","createServer","resourcesPath","resolve","createWindow","width","height","webPreferences","nodeIntegration","devTools","loadFile","on","e","preventDefault","hide","appendLog","err","appendFile","makeproxy","type","arg","list","execFile","cwd","windowsHide","stdout","stderr","close","privoxy","pid","allquit","kill","listening","addfile","name","chunk","cb","readFile","res","data","JSON","parse","toString","unshift","writeFile","stringify","deleteData","condition","filter","v","isPackaged","webContents","openDevTools","traylist","label","[object Object]","exit","contextMenu","buildFromTemplate","setToolTip","setContextMenu","isVisible","show","event","platform","quit","getAllWindows","length","req","url","setHeader","end","once","r","reply","console","log","listen","remote_addr","addr","remote_port","port","password","sub","d","ip","async","hosts","arr","start","Date","now","Promise","all","map","host","promise","probe","timeout","then","forEach","i","avg","parseInt","catch","template","id","submenu","click","openItem","push","role","menu","send","channel","args","setApplicationMenu","items","value","child","val"],"mappings":"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"}